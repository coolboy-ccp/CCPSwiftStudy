//
//  FirstDay.swift
//  CCPSwiftStudy
//
//  Created by liqunfei on 16/3/29.
//  Copyright ¬© 2016Âπ¥ chuchengpeng. All rights reserved.
//

import UIKit

class FirstDay: NSObject {
   //Â∏∏ÈáèÂ£∞Êòé
    let minNumber = 10
    let maxNumber: Int = 50
    //ÂèòÈáèÂ£∞Êòé
    var currentNumber = 11
    var x = 1,y = 2,z: Float = 3.0
    //:ÂêéÈù¢Ë∑üÁùÄÊòØÂèòÈáèÁöÑÁ±ªÂûã,Â¶ÇÊûúÁªôÂèòÈáèËµã‰∫ÜÂàùÂßãÂÄºÔºå‰∏ÄËà¨ÂèØ‰ª•‰∏çÂÜôÁ±ªÂûãÔºåswiftÂèØ‰ª•Ëá™Ë°åÊé®Êñ≠Âá∫ÂèòÈáèÁ±ªÂûã(x,y‰∏∫Int,z‰∏∫Float)
    let ÂÖÄ = 3.14159
    let ‰Ω†Â•Ω = "hello"
    let üòÑüòä = "Ë°®ÊÉÖÁ¨¶"
    let happy = "happy"
    let minInt16Value = Int16.min
    let maxInt16Value = Int16.max
    
    func achieveFuction() {
        self.changeValue();
        self.someAboutString()
        self.someAboutArrayAndDictionary()
        self.controlStyle()
        print(self.greet("developer", day:"2016-3-31"))
        print(self.calculateStatistics([1,3,5,7,9,11,45]))
        print(self.avaOf())
        print(self.avaOf(12,13,15))
        let increement = returnAFunction()
        print(increement(1))
        func lessThan(number: Int) -> Bool {
            return number < 10;
        }
        let numbers = [20,30,15,7];
        print(self.functionAs(numbers, condition: lessThan))
        self.biBao()
    }
    //swiftÁúüÂøÉÂº∫ÔºåÂ∏∏ÈáèÂíåÂèòÈáèÂêçÂá†‰πéËÉΩÁî®‰ªª‰ΩïÂ≠óÁ¨¶
    func changeValue() {
        currentNumber = x + y
        var a,b,c: Float
        //a,b,cÈÉΩ‰∏∫Float
        a = 1.0
        b = 1.0
        c = 1.0
        let d = a + b + c
        print(d)//ÊâìÂç∞d
        print("Today is first day \(happy)")
        let cat = "üòç";print(cat)
        print(maxInt16Value)
        print(minInt16Value)
        let myUnit : UInt = 15
        print(myUnit)
        //UIntÊ≠£Êï¥Êï∞
        //ÂàÜÂè∑Âπ∂‰∏çÂº∫Âà∂Ë¶ÅÊ±ÇÔºå‰ΩÜÂ¶ÇÊûú‰∏ÄË°åÊúâÂ§öÂè•‰ª£Á†ÅÂ∞±ÂøÖÈ°ªË¶ÅÂàÜÂè∑
    }
    //ÂÖ≥‰∫éswiftÂíåocÊ≥®Èáä
    //Áõ∏ÂêåÁÇπÔºö
    // 
    /**/
    //‰∏çÂêåÁÇπÔºö
    /*
    ÊàëÊòØÁ¨¨‰∏Ä‰∏™Â§öË°åÊ≥®Èáä
    /*
    ÊàëÊòØÁ¨¨‰∫å‰∏™Â§öË°åÊ≥®Èáä
    */
    */
    
    //Â≠óÁ¨¶‰∏≤
    func someAboutString() {
        //\(***)ÂèØ‰ª•Ê∑ªÂä†
        let apples = 3;
        let appleSummary = "I have \(apples) apples"
        print(appleSummary)
        //‰ΩøÁî®+ÊãºÊé•Êó∂ÂøÖÈ°ª‰øùËØÅÁ±ªÂûã‰∏ÄËá¥ÔºåswiftÊòØÂº∫Á±ªÂûãËØ≠Ë®ÄÔºå‰∏çÂêåÁ±ªÂûã‰∏çËÉΩÁõ∏Âä†
        let label = "The width is"
        let width = 94
        let labelWidth = label + String(width)
        print(labelWidth)
        
    }
    //Â≠óÂÖ∏ÂíåÊï∞ÁªÑ
    func someAboutArrayAndDictionary() {
        //array
        var shoppingList = ["catfish","water","tulips","blue paint"]
        shoppingList[1] = "bottle of water"
        print(shoppingList)
        
        //dictionary
        var occupations = ["Malcolm":"Captain","Kaylee":"Mechanic"]
        occupations["Jayene"] = "Public relations"
        print(occupations)
        
        var emptyArray = [String]()
        var emptyDictionary = [String:Float]()
        emptyArray = ["arr"]
        emptyDictionary = ["arr":12.0]
        print(emptyDictionary)
        print(emptyArray)
        let emptyArray1 = []
        let emptyDictionary1 = [:]
        print(emptyArray1)
        print(emptyDictionary1)
    }
    //ÊéßÂà∂ÊµÅ
    /*
    if,switchÂÅöÈÄªËæëÂà§Êñ≠,for-in,for,while,repeat-whileÂÅöÂæ™ÁéØ„ÄÇ‰∏çÂº∫Âà∂Áî®Â∞èÊã¨Âè∑Êã¨Ëµ∑Êù•Êù°‰ª∂Ôºå‰ΩÜÊòØËä±Êã¨Âè∑ÊòØÂøÖÈ°ªÁöÑ
     */
    func controlStyle() {
        let individualScores = [75,43,103,87,12,33]
        var teamSore = 0;
        for score in individualScores {
            //Âú®ifËØ≠Âè•‰∏≠ÔºåÊù°‰ª∂ÂøÖÈ°ªÊòØÂ∏ÉÂ∞îË°®ËææÂºèÔºå‰∏çÂÜçÈöêÂºè‰∏éÈõ∂ÂÅöËÆ°ÁÆó
            if score > 50 {
                teamSore += 3
            }
            else {
                teamSore += 1
            }
        }
        print(teamSore)
        
        //?Ë°®Á§∫ÂèØÈÄâÁ±ªÂûãÔºåÂåÖÊã¨‰∏Ä‰∏™ÂÄºÂíå‰∏Ä‰∏™nil
        let optionalString: String? = "optionalString"
        print(optionalString == nil)
        
        
        //Â¶ÇÊûúoptionalName‰∏∫nilÂàôif‰ºöË¢´Ë∑≥Ëøá
        let optionalName: String? = "John"
        var greeting = "Hello"
        if let name = optionalName {
            greeting = "Hello,\(name)"
        }
        print(greeting)
        
        let nickName:String? = nil
        let fullName:String = "John"
        let informalGreeting = "hi\(nickName ?? fullName)"
        print(informalGreeting)
        
        //switchÊîØÊåÅ‰ªªÊÑèÁ±ªÂûãÁöÑÊï∞ÊçÆÂíåÂêÑÁßçÁ±ªÂûãÁöÑÊØîËæÉÊìç‰Ωú
        let vegetable = "red pepper"
        switch vegetable {
        case "celery":
            print("Add some raisins and make ants on a log")
        case "cucumber","watercress":
            print("That would make a good tea sandwich")
        case let x where x.hasSuffix("pepper"):
            print("Is it a spicy \(x)?")
        default:
            print("Everything tastes good in soup")
        }
        
        //for-in
        let interestingNumbers = ["Prime":[1,35,8,46],"Fibonacci":[2,5,7,9,6,5],"Square":[55,44,99,66]]
        var largest = 0
        for (_,numbers) in interestingNumbers {
            for number in numbers {
                if number > largest {
                    largest = number;
                }
            }
        }
        print(largest)
        
        //while repeat-while
        var n = 2
        while n < 100 {
            n = n * 2
        }
        print(n)
        
        var m = 2
        repeat {
        m = m * 2
        } while m < 100
        print(m)
        
        //‰ΩøÁî®..<Êù•ÂàõÈÄ†‰∏Ä‰∏™Â∫èÂàóÂå∫Èó¥(..<‰∏çÂåÖÂê´ÊúÄÂ§ßÂÄºÁöÑÂå∫Èó¥,...ÂåÖÂê´ÊúÄÂ§ßÂÄºÂíåÊúÄÂ∞èÂÄºÁöÑÂå∫Èó¥)
        var firstForLoop = 0
        for i in 0..<4 {
            firstForLoop += i
        }
        print(firstForLoop)
    }
    
    /*
    ÂáΩÊï∞Ôºö
    Â£∞ÊòéÔºöfunc
    ÂèÇÊï∞Ôºö(name:class)
    ËøîÂõûÂÄº:->class
    */
    func greet(name: String,day:String) -> String {
        return "Hello \(name),today is\(day)"
    }
    //ÂÖÉÁ•ñ (name:class,name1:class1,name2:clasee2)
    func calculateStatistics(scores: [Int]) -> (min: Int,max: Int,ava:Float) {
        var min = scores[0],max = scores[0],ava: Float = 0;
        for score in scores {
            if score > max {
                max = score
            }
            else if score < min {
                min = score
            }
            ava += Float(score)
        }
        ava = ava/Float(scores.count)
        return(min,max,ava)
    }
    
    //ÂáΩÊï∞ÂèØ‰ª•Êé•Âèó‰∏çÁ°ÆÂÆöÁöÑÂèÇÊï∞
    func avaOf(numbers: Float...) ->Float {
        var ava:Float = 0;
        for number in numbers {
            ava += number
        }
        if numbers.count > 0 {
            ava = ava / Float(numbers.count)
        }
        else {
            print("input some numbers")
        }
        self .returnANumber()
        return ava
    }
    
    //ÂáΩÊï∞ÂèØ‰ª•ÂÜÖÂµå
    func returnANumber() -> Int {
        var y = 10
        func add() {
            y += 15
        }
        print(y)
        return y
    }
    
    //ÂáΩÊï∞ÂèØ‰ª•‰Ωú‰∏∫ËøîÂõûÂÄº
    func returnAFunction() -> (Int ->Int) {
        func addOne(number: Int) ->Int {
            return 20 + number
        }
        return addOne
    }
    
    //ÂáΩÊï∞ÂèØ‰ª•‰Ωú‰∏∫ÂèÇÊï∞
    func functionAs(list: [Int], condition: Int -> Bool) ->Bool {
        for item in list {
            if condition(item) {
                return true
            }
        }
        return false
    }
    
    //Èó≠ÂåÖÔºö‰∏ÄÊÆµÂèØ‰ª•Ë¢´ÈöèÂêéË∞ÉÁî®ÁöÑ‰ª£Á†ÅÂùó
    func biBao() {
        let strings = ["hahah","heiheh"]
        print(strings.map({(asTr: String) -> String in return asTr + "Èó≠ÂåÖ"}))
        let anumbers = [11,12,13,15]
        print(anumbers.map{
            (number: Int) -> Int in
            let result = 3 * number
            return result
            })
        print(anumbers.map({number in 2 * number}))
        //$1 > $0ÂçáÂ∫è, $1 < $0 ÈôçÂ∫è
        print(strings.sort{$1 > $0})
    }
}
